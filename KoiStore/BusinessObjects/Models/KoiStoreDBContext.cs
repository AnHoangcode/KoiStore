// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.Extensions.Configuration;

namespace BusinessObjects.Models
{
    public partial class KoiStoreDBContext : DbContext
    {
        public KoiStoreDBContext()
        {
        }

        public KoiStoreDBContext(DbContextOptions<KoiStoreDBContext> options)
            : base(options)
        {
        }
        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
                optionsBuilder.UseSqlServer(GetConnectionString());
				optionsBuilder.UseQueryTrackingBehavior(QueryTrackingBehavior.NoTracking);
			}
        }
       //
      
       //
        private string GetConnectionString()
        {
            IConfiguration configuration = new ConfigurationBuilder()
                    .SetBasePath(Directory.GetCurrentDirectory())
                    .AddJsonFile("appsettings.json", true, true)
                    .Build();
            return configuration["ConnectionStrings:DBConnect"];
        }
        public virtual DbSet<Feedback> Feedbacks { get; set; }
        public virtual DbSet<KoiFarm> KoiFarms { get; set; }
        public virtual DbSet<KoiProfile> KoiProfiles { get; set; }
        public virtual DbSet<KoiType> KoiTypes { get; set; }
        public virtual DbSet<Order> Orders { get; set; }
        public virtual DbSet<OrderDetail> OrderDetails { get; set; }
        public virtual DbSet<Rating> Ratings { get; set; }
        public virtual DbSet<Role> Roles { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<UserProfile> UserProfiles { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Feedback>(entity =>
            {
                entity.HasKey(e => e.Feedback_Id)
                    .HasName("PK__Feedback__CD39931812191263");

                entity.ToTable("Feedback");

                entity.Property(e => e.Create_At).HasColumnType("datetime");

                entity.Property(e => e.Description)
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.Order_Detail)
                    .WithMany(p => p.Feedbacks)
                    .HasForeignKey(d => d.Order_Detail_Id)
                    .HasConstraintName("FK__Feedback__Order___4F7CD00D");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.Feedbacks)
                    .HasForeignKey(d => d.User_Id)
                    .HasConstraintName("FK__Feedback__User_I__4E88ABD4");
            });

            modelBuilder.Entity<KoiFarm>(entity =>
            {
                entity.HasKey(e => e.Farm_Id)
                    .HasName("PK__KoiFarm__329600B6426DAEFF");

                entity.ToTable("KoiFarm");

                entity.Property(e => e.Contact)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Description)
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.Farm_Name)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Location)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<KoiProfile>(entity =>
            {
                entity.HasKey(e => e.Koi_Id)
                    .HasName("PK__KoiProfi__008F96F17D154A69");

                entity.ToTable("KoiProfile");

                entity.Property(e => e.Create_At).HasColumnType("datetime");

                entity.Property(e => e.Description)
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.Image)
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.Koi_Name)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Update_At).HasColumnType("datetime");

                entity.HasOne(d => d.Farm)
                    .WithMany(p => p.KoiProfiles)
                    .HasForeignKey(d => d.Farm_Id)
                    .HasConstraintName("FK__KoiProfil__Farm___440B1D61");

                entity.HasOne(d => d.Type)
                    .WithMany(p => p.KoiProfiles)
                    .HasForeignKey(d => d.Type_Id)
                    .HasConstraintName("FK__KoiProfil__Type___4316F928");
            });

            modelBuilder.Entity<KoiType>(entity =>
            {
                entity.HasKey(e => e.Type_Id)
                    .HasName("PK__KoiType__FE90DD9E02B57A17");

                entity.ToTable("KoiType");

                entity.Property(e => e.Create_At).HasColumnType("datetime");

                entity.Property(e => e.Description)
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Type_Name)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Update_At).HasColumnType("datetime");
            });

            modelBuilder.Entity<Order>(entity =>
            {
                entity.HasKey(e => e.Order_Id)
                    .HasName("PK__Order__F1E4607BF1BC1FFD");

                entity.ToTable("Order");

                entity.Property(e => e.Create_At).HasColumnType("datetime");

                entity.Property(e => e.Delivery_Address)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.User)
                    .WithMany(p => p.Orders)
                    .HasForeignKey(d => d.User_Id)
                    .HasConstraintName("FK__Order__User_Id__46E78A0C");
            });

            modelBuilder.Entity<OrderDetail>(entity =>
            {
                entity.HasKey(e => e.Order_Detail_Id)
                    .HasName("PK__OrderDet__1581C7635EAE131D");

                entity.ToTable("OrderDetail");

                entity.Property(e => e.Create_At).HasColumnType("datetime");

                entity.Property(e => e.End_At).HasColumnType("datetime");

                entity.Property(e => e.Order_Detail_Type)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Start_At).HasColumnType("datetime");

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Update_At).HasColumnType("datetime");

                entity.HasOne(d => d.Koi)
                    .WithMany(p => p.OrderDetails)
                    .HasForeignKey(d => d.Koi_Id)
                    .HasConstraintName("FK__OrderDeta__Koi_I__4BAC3F29");

                entity.HasOne(d => d.Order)
                    .WithMany(p => p.OrderDetails)
                    .HasForeignKey(d => d.Order_Id)
                    .HasConstraintName("FK__OrderDeta__Order__49C3F6B7");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.OrderDetails)
                    .HasForeignKey(d => d.User_Id)
                    .HasConstraintName("FK__OrderDeta__User___4AB81AF0");
            });

            modelBuilder.Entity<Rating>(entity =>
            {
                entity.HasKey(e => e.Rating_Id)
                    .HasName("PK__Rating__BE48C8450777A2BD");

                entity.ToTable("Rating");

                entity.Property(e => e.Create_At).HasColumnType("datetime");

                entity.Property(e => e.Description)
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.Order_Detail)
                    .WithMany(p => p.Ratings)
                    .HasForeignKey(d => d.Order_Detail_Id)
                    .HasConstraintName("FK__Rating__Order_De__534D60F1");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.Ratings)
                    .HasForeignKey(d => d.User_Id)
                    .HasConstraintName("FK__Rating__User_Id__52593CB8");
            });

            modelBuilder.Entity<Role>(entity =>
            {
                entity.HasKey(e => e.Role_Id)
                    .HasName("PK__Role__D80AB4BB189567C0");

                entity.ToTable("Role");

                entity.Property(e => e.RoleName)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<User>(entity =>
            {
                entity.HasKey(e => e.User_Id)
                    .HasName("PK__User__206D917090054B21");

                entity.ToTable("User");

                entity.Property(e => e.Password)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Status)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Username)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.Role)
                    .WithMany(p => p.Users)
                    .HasForeignKey(d => d.Role_Id)
                    .HasConstraintName("FK__User__Role_Id__398D8EEE");
            });

            modelBuilder.Entity<UserProfile>(entity =>
            {
                entity.HasKey(e => e.Profile_Id)
                    .HasName("PK__UserProf__A60ECB42D576AE3E");

                entity.ToTable("UserProfile");

                entity.Property(e => e.Address)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DateOfBirth)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Email)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FirstName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Gender)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LastName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PhoneNumber)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.HasOne(d => d.User)
                    .WithMany(p => p.UserProfiles)
                    .HasForeignKey(d => d.User_Id)
                    .HasConstraintName("FK__UserProfi__User___3C69FB99");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}